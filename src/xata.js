// Generated by Xata Codegen 0.29.4. Please do not edit.
import { buildClient } from "@xata.io/client";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "trips",
    columns: [
      { name: "city", type: "string" },
      { name: "country", type: "string" },
      {
        name: "start",
        type: "string",
        notNull: true,
        defaultValue: "2024-04-01",
      },
      { name: "end", type: "string", defaultValue: "2024-04-18" },
    ],
    revLinks: [{ column: "trip", table: "notes" }],
  },
  {
    name: "notes",
    columns: [
      { name: "name", type: "string" },
      { name: "description", type: "text" },
      { name: "img", type: "file", file: { defaultPublicAccess: true } },
      { name: "rating", type: "int" },
      { name: "trip", type: "link", link: { table: "trips" } },
      { name: "type", type: "string", defaultValue: "" },
    ],
  },
];
/** @type { import('@xata.io/client').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://Teri-Eyenike-s-workspace-14frfm.eu-west-1.xata.sh/db/track-trip-dashboard-with-xata-next",
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
